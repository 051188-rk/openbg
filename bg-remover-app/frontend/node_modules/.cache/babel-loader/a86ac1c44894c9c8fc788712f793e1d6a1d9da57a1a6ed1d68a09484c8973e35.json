{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rakes\\\\vs code\\\\open-remove\\\\bg-remover-app\\\\frontend\\\\src\\\\components\\\\BackgroundEditorPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport Loader from './Loader';\nimport BackgroundOptions from './BackgroundOptions';\nimport DownloadButtons from './DownloadButtons';\nimport './BackgroundEditorPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BackgroundEditorPage() {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const imageFile = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.imageFile;\n  const [step, setStep] = useState('original'); // 'original', 'removing', 'removed', 'editing', 'converted'\n  const [displayImage, setDisplayImage] = useState(null); // Data URL for preview\n  const [transparentImage, setTransparentImage] = useState(null); // Result\n  const [convertedImage, setConvertedImage] = useState(null); // Final with background\n  const [bgChoice, setBgChoice] = useState(null); // solid, sample, user\n  const [history, setHistory] = useState([]);\n  const [future, setFuture] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [downloadData, setDownloadData] = useState({});\n\n  // On mount, convert file to data URL\n  useEffect(() => {\n    if (!imageFile) {\n      navigate('/');\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = e => setDisplayImage(e.target.result);\n    reader.readAsDataURL(imageFile);\n  }, [imageFile, navigate]);\n\n  // Handler for \"Remove Background\"\n  const handleRemoveBackground = async () => {\n    setStep('removing');\n    setLoading(true);\n    const formData = new FormData();\n    formData.append('image', imageFile);\n    try {\n      const response = await fetch('http://127.0.0.1:5000/remove-bg', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      setTransparentImage(`data:image/png;base64,${data.original}`);\n      setDownloadData({\n        original: data.original,\n        size_512: data.size_512,\n        size_256: data.size_256\n      });\n      setStep('removed');\n    } catch (err) {\n      alert('Error processing image');\n      setStep('original');\n    }\n    setLoading(false);\n  };\n\n  // Handler for \"Convert\" (apply new background)\n  const handleConvert = async () => {\n    if (!bgChoice) return;\n    setStep('converting');\n    setLoading(true);\n    const formData = new FormData();\n    formData.append('image', imageFile);\n    if (bgChoice.type === 'color') formData.append('background', bgChoice.value);\n    if (bgChoice.type === 'image') {\n      // Fetch the image as a blob and append as file\n      const response = await fetch(bgChoice.value);\n      const blob = await response.blob();\n      formData.append('sampleBg', new File([blob], 'sampleBg.jpg', {\n        type: blob.type\n      }));\n    }\n    if (bgChoice.type === 'user') formData.append('userBg', bgChoice.value);\n    try {\n      const response = await fetch('http://127.0.0.1:5000/replace-bg', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await response.json();\n      setConvertedImage(`data:image/png;base64,${data.result}`);\n      setDownloadData({\n        original: data.original,\n        size_512: data.size_512,\n        size_256: data.size_256\n      });\n      setStep('converted');\n    } catch (err) {\n      alert('Error converting background');\n      setStep('removed');\n    }\n    setLoading(false);\n  };\n\n  // Undo/Redo\n  const handleUndo = () => {};\n  const handleRedo = () => {};\n\n  // Download\n  const handleDownload = size => {\n    const b64 = downloadData[size === 'original' ? 'original' : `size_${size}`];\n    if (!b64) return;\n    const link = document.createElement('a');\n    link.href = `data:image/png;base64,${b64}`;\n    link.download = `openbg-${size}.png`;\n    link.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-panel\",\n      children: [step === 'original' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-stage\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: displayImage,\n          alt: \"Original\",\n          className: \"editor-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"editor-action-btn\",\n          onClick: handleRemoveBackground,\n          children: \"Remove Background\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), step === 'removing' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-stage\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-image-blur\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: displayImage,\n            alt: \"Removing...\",\n            className: \"editor-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), step === 'removed' && transparentImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-stage\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: transparentImage,\n          alt: \"Transparent\",\n          className: \"editor-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DownloadButtons, {\n          onDownload: handleDownload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(BackgroundOptions, {\n          onSelect: setBgChoice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"editor-action-btn\",\n          onClick: handleConvert,\n          children: \"Convert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-undo-redo\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUndo,\n            children: \"Undo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRedo,\n            children: \"Redo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), step === 'converted' && convertedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-stage\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: convertedImage,\n          alt: \"Final\",\n          className: \"editor-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DownloadButtons, {\n          onDownload: handleDownload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s(BackgroundEditorPage, \"HiZPavZezW9CnVtXzCzy87MyGBE=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = BackgroundEditorPage;\nexport default BackgroundEditorPage;\nvar _c;\n$RefreshReg$(_c, \"BackgroundEditorPage\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","Loader","BackgroundOptions","DownloadButtons","jsxDEV","_jsxDEV","BackgroundEditorPage","_s","_location$state","location","navigate","imageFile","state","step","setStep","displayImage","setDisplayImage","transparentImage","setTransparentImage","convertedImage","setConvertedImage","bgChoice","setBgChoice","history","setHistory","future","setFuture","loading","setLoading","downloadData","setDownloadData","reader","FileReader","onload","e","target","result","readAsDataURL","handleRemoveBackground","formData","FormData","append","response","fetch","method","body","data","json","original","size_512","size_256","err","alert","handleConvert","type","value","blob","File","handleUndo","handleRedo","handleDownload","size","b64","link","document","createElement","href","download","click","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onDownload","onSelect","_c","$RefreshReg$"],"sources":["C:/Users/rakes/vs code/open-remove/bg-remover-app/frontend/src/components/BackgroundEditorPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport Loader from './Loader';\nimport BackgroundOptions from './BackgroundOptions';\nimport DownloadButtons from './DownloadButtons';\nimport './BackgroundEditorPage.css';\n\nfunction BackgroundEditorPage() {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const imageFile = location.state?.imageFile;\n\n  const [step, setStep] = useState('original'); // 'original', 'removing', 'removed', 'editing', 'converted'\n  const [displayImage, setDisplayImage] = useState(null); // Data URL for preview\n  const [transparentImage, setTransparentImage] = useState(null); // Result\n  const [convertedImage, setConvertedImage] = useState(null); // Final with background\n  const [bgChoice, setBgChoice] = useState(null); // solid, sample, user\n  const [history, setHistory] = useState([]);\n  const [future, setFuture] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [downloadData, setDownloadData] = useState({});\n\n  // On mount, convert file to data URL\n  useEffect(() => {\n    if (!imageFile) {\n      navigate('/');\n      return;\n    }\n    const reader = new FileReader();\n    reader.onload = (e) => setDisplayImage(e.target.result);\n    reader.readAsDataURL(imageFile);\n  }, [imageFile, navigate]);\n\n  // Handler for \"Remove Background\"\n  const handleRemoveBackground = async () => {\n    setStep('removing');\n    setLoading(true);\n    const formData = new FormData();\n    formData.append('image', imageFile);\n    try {\n      const response = await fetch('http://127.0.0.1:5000/remove-bg', {\n        method: 'POST',\n        body: formData,\n      });\n      const data = await response.json();\n      setTransparentImage(`data:image/png;base64,${data.original}`);\n      setDownloadData({\n        original: data.original,\n        size_512: data.size_512,\n        size_256: data.size_256,\n      });\n      setStep('removed');\n    } catch (err) {\n      alert('Error processing image');\n      setStep('original');\n    }\n    setLoading(false);\n  };\n\n  // Handler for \"Convert\" (apply new background)\n  const handleConvert = async () => {\n    if (!bgChoice) return;\n    setStep('converting');\n    setLoading(true);\n    const formData = new FormData();\n    formData.append('image', imageFile);\n    if (bgChoice.type === 'color') formData.append('background', bgChoice.value);\n    if (bgChoice.type === 'image') {\n      // Fetch the image as a blob and append as file\n      const response = await fetch(bgChoice.value);\n      const blob = await response.blob();\n      formData.append('sampleBg', new File([blob], 'sampleBg.jpg', { type: blob.type }));\n    }\n    if (bgChoice.type === 'user') formData.append('userBg', bgChoice.value);\n    try {\n      const response = await fetch('http://127.0.0.1:5000/replace-bg', {\n        method: 'POST',\n        body: formData,\n      });\n      const data = await response.json();\n      setConvertedImage(`data:image/png;base64,${data.result}`);\n      setDownloadData({\n        original: data.original,\n        size_512: data.size_512,\n        size_256: data.size_256,\n      });\n      setStep('converted');\n    } catch (err) {\n      alert('Error converting background');\n      setStep('removed');\n    }\n    setLoading(false);\n  };\n\n  // Undo/Redo\n  const handleUndo = () => {};\n  const handleRedo = () => {};\n\n  // Download\n  const handleDownload = (size) => {\n    const b64 = downloadData[size === 'original' ? 'original' : `size_${size}`];\n    if (!b64) return;\n    const link = document.createElement('a');\n    link.href = `data:image/png;base64,${b64}`;\n    link.download = `openbg-${size}.png`;\n    link.click();\n  };\n\n  return (\n    <div className=\"editor-page\">\n      <div className=\"editor-panel\">\n        {step === 'original' && (\n          <div className=\"editor-stage\">\n            <img src={displayImage} alt=\"Original\" className=\"editor-image\" />\n            <button className=\"editor-action-btn\" onClick={handleRemoveBackground}>Remove Background</button>\n          </div>\n        )}\n        {step === 'removing' && (\n          <div className=\"editor-stage\">\n            <div className=\"editor-image-blur\">\n              <img src={displayImage} alt=\"Removing...\" className=\"editor-image\" />\n              <Loader />\n            </div>\n          </div>\n        )}\n        {step === 'removed' && transparentImage && (\n          <div className=\"editor-stage\">\n            <img src={transparentImage} alt=\"Transparent\" className=\"editor-image\" />\n            <DownloadButtons onDownload={handleDownload} />\n            <BackgroundOptions onSelect={setBgChoice} />\n            <button className=\"editor-action-btn\" onClick={handleConvert}>Convert</button>\n            <div className=\"editor-undo-redo\">\n              <button onClick={handleUndo}>Undo</button>\n              <button onClick={handleRedo}>Redo</button>\n            </div>\n          </div>\n        )}\n        {step === 'converted' && convertedImage && (\n          <div className=\"editor-stage\">\n            {/* Show final image with new background */}\n            <img src={convertedImage} alt=\"Final\" className=\"editor-image\" />\n            <DownloadButtons onDownload={handleDownload} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default BackgroundEditorPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}